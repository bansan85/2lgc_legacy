Compilation sous Linux
======================

Pour compiler et installer l'application, il suffit de lancer les commandes suivantes :
./clean_config

autoscan
patch < diff-configure.scan.patch
mv configure.scan configure.ac
gettextize -c -f --no-changelog

cd po
patch < ../diff-po-Makevars.template.patch
cd ..
mv po/Makevars.template po/Makevars
rm -f po/POTFILES.in
find . -name "*.c" -o -name "*.h" > po/POTFILES.in

autoheader
aclocal
libtoolize
automake --add-missing --copy
autoconf
./configure --with-gtk --with-debug --prefix=/usr/local CFLAGS="" CXXFLAGS=""
sed -i 's/-DPIC/-DPIC -Wl,--as-needed/g' libtool
sed -i 's/-lcolamd -lcholmod/-lcholmod -lcolamd/g' `find . -name "Makefile"`
make -j3 && sudo make install && /usr/local/bin/codegui
sudo make install-data && make check -j3
make -C doc doc
NOTA :
    -pg
    --coverage est une option de deboguage qui permet à chaque lancement d'un programme de lister les lignes de code qui ont été exécutées et celles obsolètes.
      Pour utiliser cette fonctionnalité, il convient d'ajouter --coverage dans Makefile.am, de recompiler la source et de lancer codegui (par exemple).
      Les fichiers de statistiques des libraries sont placés dans lib/.libs/{*.gcno,*.gcda}. Il convient de les redescendre d'un niveau (mv lib/libs/{*.gcno,*.gcda} lib) et ensuite de lancer la commande gcov *.gcda.
      Pour chaque fichier .gcda est créé un fichier .c.gov qui contient le code source annoté et permet de savoir le nombre de fois que chaque ligne a été exécutée.


Compilation sous Windows
========================

Aucun prérequis n'est nécessaire pour Windows. La présente procédure explique la compilation depuis un ordinateur supposé "vierge".

Le choix pour compiler l'application s'est porté sur l'application MinGW et son environnement proche de Linux.
Exécutez le programme : mingw-get-inst-20110530.exe (http://sourceforge.net/projects/mingw/files/Automated%20MinGW%20Installer/mingw-get-inst/).
Lors de l'installation cochez "Download latest repository catalogues", laissez c:\MinGW pour le dossier par défaut et cochez dans les options d'installation "MinGW Compiler Suite" et "MinGW Developer ToolKit".
Une fois l'installation terminée, lancez MinGW en mode administrateur (nécessaire uniquement pour compiler gtk+3) et exécutez les commandes suivantes :

mingw-get install msys-wget
mkdir comp
cd comp

wget http://zlib.net/zlib-1.2.5.tar.bz2
tar xvjf zlib-1.2.5.tar.bz2
cd zlib-1.2.5
make -j3 -f win32/Makefile.gcc
make -f win32/Makefile.gcc install BINARY_PATH="c:/MinGW/bin" LIBRARY_PATH="c:/MinGW/lib" INCLUDE_PATH="c:/MinGW/include"
cp zlib1.dll c:/MinGW/bin/libz.dll
cd ..

wget ftp://sourceware.org/pub/libffi/libffi-3.0.9.tar.gz
tar xvzf libffi-3.0.9.tar.gz
cd libffi-3.0.9
./configure --disable-static --enable-shared --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://ftp.acc.umu.se/pub/gnome/sources/glib/2.30/glib-2.30.0.tar.xz
tar xvaf glib-2.30.0.tar.xz
cd glib-2.30.0
sed -i 's/tests//g' gio/Makefile.am
sed -i 's~gdbus-2.0/codegen~~g' gio/Makefile.am
LIBFFI_CFLAGS="-Ic:/MinGW/lib/libffi-3.0.9/include" LIBFFI_LIBS="-lffi" ./configure --disable-static --enable-shared --with-threads=win32 --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://pkgconfig.freedesktop.org/releases/pkg-config-0.26.tar.gz
tar xvzf pkg-config-0.26.tar.gz &&\
cd pkg-config-0.26 &&\
GLIB_LIBS="-lglib-2.0" GLIB_CFLAGS="-Ic:/MinGW/include/glib-2.0 -Ic:/MinGW/lib/glib-2.0/include" ./configure --disable-static --enable-shared --prefix=c:/MinGW/ && \
make -j3 && make install && cd ..

wget ftp://xmlsoft.org/libxml2/libxml2-2.7.8.tar.gz
tar xvzf libxml2-2.7.8.tar.gz
cd libxml2-2.7.8
./configure --disable-static --enable-shared --without-icu --without-python --disable-ipv6 --without-threads --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://www.ijg.org/files/jpegsrc.v8c.tar.gz
tar xvzf jpegsrc.v8c.tar.gz
cd jpeg-8c
sed -i 's/long INT32/int INT32/g' jmorecfg.h
./configure --disable-static --enable-shared --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://download.osgeo.org/libtiff/tiff-4.0.0beta7.tar.gz
tar xvzf tiff-4.0.0beta7.tar.gz
cd tiff-4.0.0beta7
./configure --disable-static --enable-shared --enable-zlib --enable-jpeg --without-x --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget ftp://ftp.simplesystems.org/pub/png/src/libpng-1.4.8.tar.xz
tar xvaf libpng-1.4.8.tar.xz
cd libpng-1.4.8
./configure --disable-static --enable-shared --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://ftp.gnome.org/pub/gnogdk-pixbuf/2.24/gdk-pixbuf-2.24.0.tar.xz
tar xvaf gdk-pixbuf-2.24.0.tar.xz
cd gdk-pixbuf-2.24.0
PKG_CONFIG_PATH="c:/MinGW/lib/pkgconfig" ./configure --disable-static --enable-shared --with-libjpeg --with-libtiff --with-libpng --disable-introspection --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://cairographics.org/releases/pixman-0.22.2.tar.gz
tar xvzf pixman-0.22.2.tar.gz
cd pixman-0.22.2
./configure --disable-static --enable-shared --enable-mmx --enable-sse2 --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://downloads.sourceforge.net/project/freetype/freetype2/2.4.6/freetype-2.4.6.tar.bz2?r=&ts=1313862356
tar xvjf freetype-2.4.6.tar.bz2
cd freetype-2.4.6
./configure --disable-static --enable-shared --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://freedesktop.org/software/fontconfig/release/fontconfig-2.8.0.tar.gz
tar xvzf fontconfig-2.8.0.tar.gz
cd fontconfig-2.8.0
PKG_CONFIg_PATH="c:/MinGW/lib/pkgconfig" ./configure --disable-static --enable-shared --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://downloads.sourceforge.net/project/glew/glew/1.6.0/glew-1.6.0.tgz?r=http%3A%2F%2Fglew.sourceforge.net%2F&ts=1314085342
tar xvzf glew-1.6.0.tgz
cd glew-1.6.0
make -j3 && make GLEW_DEST="c:/MinGW/" install.all && cd ..

wget http://cairographics.org/releases/cairo-1.10.2.tar.gz
tar xvzf cairo-1.10.2.tar.gz
cd cairo-1.10.2
sed -i 's/\"-lGL\"/\"-lopengl32\"/g' configure
PKG_CONFIG_PATH="c:/MinGW/lib/pkgconfig" ./configure --disable-static --enable-shared --enable-svg --enable-pdf --enable-ps --enable-png --enable-xml --enable-pthread --enable-gobject --enable-gl --prefix=c:/MinGW/
sed -i 's/cairo gl/cairo/g' src/cairo-gl.pc
sed -i 's/gl libpng/libpng/g' src/cairo.pc
make -j3 && make install && cd ..

wget http://ftp.gnome.org/pub/gnopango/1.29/pango-1.29.3.tar.xz
tar xvaf pango-1.29.3.tar.xz
cd pango-1.29.3
sed -i "s/G_DEFINE_ABSTRACT_TYPE (PangoFallbackEngine/G_DEFINE_TYPE (PangoFallbackEngine/g" pango/pango-engine.c
PKG_CONFIG_PATH="c:/MinGW/lib/pkgconfig" ./configure --with-included-modules=basic-win32 --disable-static --enable-shared --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://ftp.gnome.org/pub/GNOlibcroco/0.6/libcroco-0.6.2.tar.bz2
tar xvjf libcroco-0.6.2.tar.bz2
cd libcroco-0.6.2
PKG_CONFIG_PATH="c:/MinGW/lib/pkgconfig" ./configure --disable-static --enable-shared --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://ftp.gnome.org/pub/GNOlibrsvg/2.34/librsvg-2.34.0.tar.bz2
tar xvjf librsvg-2.34.0.tar.bz2
cd librsvg-2.34.0
PKG_CONFIG_PATH="c:/MinGW/lib/pkgconfig" ./configure --disable-static --enable-shared --with-croco --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://poppler.freedesktop.org/poppler-0.16.7.tar.gz
tar xvzf poppler-0.16.7.tar.gz
cd poppler-0.16.7
PKG_CONFIG_PATH="c:/MinGW/lib/pkgconfig" ./configure --without-x --disable-static --enable-shared --enable-zlib --enable-libjpeg --enable-libpng --enable-cairo-output --disable-introspection --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://ftp.gnome.org/pub/gnoatk/2.2/atk-2.2.0.tar.bz2
tar xvjf atk-2.2.0.tar.bz2
cd atk-2.2.0
PKG_CONFIG_PATH="c:/MinGW/lib/pkgconfig" ./configure --disable-static --enable-shared --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://ftp.gnome.org/pub/gnogtk+/3.2/gtk+-3.2.0.tar.xz
tar xvaf gtk+-3.2.0.tar.xz
cd gtk+-3.2.0
sed -i 's/modules demos tests perf examples//g' Makefile.in Makefile.am
sed -i 's/\. tests/\./g' gtk/Makefile.in gtk/Makefile.am gdk/Makefile.in gdk/Makefile.am
sed -i 's/quartz tests/quartz/g' gdk/Makefile.in gdk/Makefile.am
sed -i 's/ -luuid/ /g' gtk/Makefile.am gtk/Makefile.in
PKG_CONFIG_PATH="c:/MinGW/lib/pkgconfig" ./configure --disable-modules --disable-packagekit --disable-papi --disable-introspection --disable-static --enable-shared --prefix=c:/MinGW/
make -j3
make install && cd ..

wget ftp://ohnopub.net/mirror/liblist-2.4.tar.bz2
tar xvjf liblist-2.4.tar.bz2
cd liblist-2.4
./configure --disable-static --enable-shared --prefix=c:/MinGW/
make -j3 && make install && cd ..

wget http://www.cise.ufl.edu/research/sparse/UFconfig/current/UFconfig.tar.gz
tar xvzf UFconfig.tar.gz && \
sed -i 's/CC = cc/CC = gcc/g' UFconfig/UFconfig.mk && \
sed -i 's/-O3 -fexceptions/-O3 -DNPARTITION -DNSUPERNODAL -fexceptions/g' UFconfig/UFconfig.mk && \
sed -i 's/INSTALL_LIB = .*$/INSTALL_LIB = "c:\/MinGW\/lib"/g' UFconfig/UFconfig.mk && \
sed -i 's/INSTALL_INCLUDE = .*$/INSTALL_INCLUDE = "c:\/MinGW\/include"/g' UFconfig/UFconfig.mk && \
cd UFconfig && \
make -j3 && \
make install && \
gcc -O3 -DNPARTITION -DNSUPERNODAL -fexceptions -c UFconfig.c && \
gcc -shared -Wl,-soname,libufconfig.dll -o libufconfig.dll UFconfig.o && \
cp libufconfig.dll c:/MinGW/bin && \
cd ..

wget http://www.cise.ufl.edu/research/sparse/amd/current/AMD.tar.gz
tar xvzf AMD.tar.gz && \
cd AMD && \
make -j3 && \
make install && \
gcc -shared -Wl,-soname,libamd.dll -o libamd.dll Lib/*.o && \
cp libamd.dll c:/MinGW/bin/ && \
cd ..

wget http://www.cise.ufl.edu/research/sparse/colamd/current/COLAMD.tar.gz
tar xvzf COLAMD.tar.gz && \
cd COLAMD && \
make -j3 && \
make install && \
gcc -shared -Wl,-soname,libcolamd.dll -o libcolamd.dll Lib/*.o && \
cp libcolamd.dll c:/MinGW/bin/ && \
cd ..

wget http://www.cise.ufl.edu/research/sparse/cholmod/current/CHOLMOD.tar.gz
tar xvzf CHOLMOD.tar.gz && \
cd CHOLMOD && \
sed -i 's/define NDEBUG/undef NDEBUG/g' Include/cholmod_internal.h && \
sed -i 's/^.*Demo.*$//g' Makefile && \
make -j3 && \
make install && \
cp Include/cholmod_internal.h c:/MinGW/include && \
gcc -shared -Wl,-soname,libcholmod.dll -o libcholmod.dll Lib/*.o -lamd -lcolamd && \
cp libcholmod.dll c:/MinGW/bin/ && \
cd ..

wget http://www.netlib.org/lapack/lapack-lite-3.1.1.tgz
tar xvzf lapack-lite-3.1.1.tgz && \
cd lapack-lite-3.1.1 && \
cp INSTALL/dlamch.f INSTALL/slamch.f SRC && \
cp INSTALL/make.inc.gfortran make.inc && \
cd BLAS/SRC && \
make -j3 && \
cd ../../SRC && \
make -j3 && \
cd .. && \
cp lapack_LINUX.a c:/MinGW/lib/liblapack.a && \
cp blas_LINUX.a c:/MinGW/lib/libblas.a && \
mkdir /c/Temp
export TMP=/c/Temp && \
gfortran --shared -o libblas.dll BLAS/SRC/*.f -O && \
gfortran --shared -o liblapack.dll SRC/*.f libblas.dll -O && \
cp libblas.dll liblapack.dll c:/MinGW/bin

wget http://www.cise.ufl.edu/research/sparse/umfpack/current/UMFPACK.tar.gz
tar xvzf UMFPACK.tar.gz && \
cd UMFPACK && \
sed -i 's/^.*Demo.*$//g' Makefile && \
make -j3 && \
make install && \
gcc -shared -Wl,-soname,libumfpack.dll -o libumfpack.dll Lib/*.o -lamd -lcholmod -lcolamd -lblas -lgfortran && \
cp libumfpack.dll c:/MinGW/bin && \
cd ..



si le programme ne permet pas une compilation sans erreur par la procédure ci-dessus :
1) vérifier le message d'erreur, il s'agit peut-être d'une application dont dépend le logiciel qui est non installée
2) A défaut, il faut déposer un rapport de bogue afin de résoudre ce problème et ce, même si la solution est simple. L'objectif est que la compilation se passe toujours sans le moindre problème.



La commande suivante permet de créer un nouveau fichier de traduction dans une langue.
msginit -l fr -o fr.po -i `find . -name "*.pot"` : permet d'ajouter une langue (dans le cas ici, le français). L'abbréviation est compatible avec /usr/share/locale
NOTA : avant de lancer msginit, il est nécessaire de compiler l'application
