Pour compiler et installer l'application, il suffit de lancer les commandes suivantes :
./clean_config

autoscan
patch < diff-configure.scan.patch
mv configure.scan configure.ac
gettextize -c -f --no-changelog

cd po
patch < ../diff-po-Makevars.template.patch
cd ..
mv po/Makevars.template po/Makevars
rm -f po/POTFILES.in
find files/ui -name "*.ui" -exec intltool-extract --quiet --type=gettext/glade {} \;
sed -i 's/N_(/gettext(/g' files/ui/*.ui.h
find . -name "*.c" -o -name "*.cc" -o -name "*.h" > po/POTFILES.in

autoheader
aclocal
libtoolize
automake --add-missing --copy
autoconf
./configure --with-gtk --prefix=/usr/local CFLAGS="" CXXFLAGS=""
sed -i 's/-DPIC/-DPIC -Wl,--as-needed/g' libtool
make -j3 && sudo make install && /usr/local/bin/codegui
sudo make install-data && make check -j3
make -C doc doc
NOTA :
    -pg
    --coverage est une option de deboguage qui permet à chaque lancement d'un programme de lister les lignes de code qui ont été exécutées et celles obsolètes.
      Pour utiliser cette fonctionnalité, il convient d'ajouter --coverage dans Makefile.am, de recompiler la source et de lancer codegui (par exemple).
      Les fichiers de statistiques des libraries sont placés dans lib/.libs/{*.gcno,*.gcda}. Il convient de les redescendre d'un niveau (mv lib/libs/{*.gcno,*.gcda} lib) et ensuite de lancer la commande gcov *.gcda.
      Pour chaque fichier .gcda est créé un fichier .c.gov qui contient le code source annoté et permet de savoir le nombre de fois que chaque ligne a été exécutée.


si le programme ne permet pas une compilation sans erreur par la procédure ci-dessus :
1) vérifier le message d'erreur, il s'agit peut-être d'une application dont dépend le logiciel qui est non installée
2) A défaut, il faut déposer un rapport de bogue afin de résoudre ce problème et ce, même si la solution est simple. L'objectif est que la compilation se passe toujours sans le moindre problème.



La commande suivante permet de créer un nouveau fichier de traduction dans une langue.
msginit -l fr -o fr.po -i `find . -name "*.pot"` : permet d'ajouter une langue (dans le cas ici, le français). L'abbréviation est compatible avec /usr/share/locale
NOTA : avant de lancer msginit, il est nécessaire de compiler l'application
